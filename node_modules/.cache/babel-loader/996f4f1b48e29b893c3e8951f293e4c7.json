{"ast":null,"code":"var _jsxFileName = \"/home/alexandre/personalProjects/eeld-react/src/components/ClassTeamDetail.js\";\nimport React from 'react';\nimport api from '../services/api';\n\nclass ClassTeamDetail extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.findWithAttr = (array, attr, value) => {\n      for (var i = 0; i < array.length; i += 1) {\n        if (array[i][attr] === value) {\n          return i;\n        }\n      }\n\n      return -1;\n    };\n\n    this.verifyStudent = () => {};\n\n    this.getStudents = () => {\n      let addedStudents = [];\n      let allStudents = [];\n      let availableStudents = [];\n      api.get('/allStudents').then(resp => {\n        allStudents = resp.data; //console.log(resp.data)\n        //this.setState({allStudents:resp.data})\n      });\n      api.get('/classTeam/' + this.state.classTeam_id).then(resp => {\n        console.log(resp);\n        const classTeams = resp.data;\n        classTeams.map(ct => {\n          console.log(ct);\n          addedStudents.push();\n        }); //this.setState({allStudents:resp.data})\n      });\n    };\n\n    this.getStudentsOfClassTeam = () => {\n      api.get('/classTeams/' + this.state.id_turma).then(resp => {\n        const idStudents = resp.data.students;\n        let studentsDetails = [];\n        idStudents.map(idStu => {\n          api.get('/students/' + idStu).then(student => {\n            //this.setState({studentsOfTheClassTeam:studentsDetails})\n            studentsDetails.push(student.data);\n            this.setState({\n              studentsOfTheClassTeam: studentsDetails\n            });\n          });\n        });\n      });\n    };\n\n    this.enrollNewStudent = event => {\n      api.post('/classTeams/addStudent', {\n        student_id: event.target.value,\n        classTeam_id: this.state.id_turma\n      }).then(resp => {\n        this.getStudentsOfClassTeam();\n      });\n    };\n\n    this.deleteStudent = event => {\n      api.post('/classTeams/removeStudent', {\n        student_id: event.target.value,\n        classTeam_id: this.state.id_turma\n      }).then(resp => {\n        this.getStudentsOfClassTeam();\n      });\n    };\n\n    this.state = {\n      id_turma: this.props.match.params.id,\n      turmaDetail: {},\n      allStudents: [],\n      studentsOfTheClassTeam: [],\n      totalStudents: '',\n      lastStudent: ''\n    };\n  }\n\n  componentDidMount() {\n    this.getStudents();\n    this.getStudentsOfClassTeam();\n  }\n\n  render() {\n    //renderiza o cadastro apenas se o numero de alunos for menor ou igual a 12\n    let head;\n\n    if (this.state.studentsOfTheClassTeam.length < 12) {\n      head = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \"Adicionar alunos na turma\"), React.createElement(\"select\", {\n        onChange: this.enrollNewStudent,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }), this.state.allStudents.map(student => React.createElement(\"option\", {\n        value: student._id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, student.name))));\n    } else {\n      head = React.createElement(\"p\", {\n        className: \"bg-danger text-light\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, \"Turma lotada - Impossivel add mais alunos nessa turma\");\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"Alunos da turma\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"bg-success\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"Total de alunos: \", this.state.studentsOfTheClassTeam.length)), head, React.createElement(\"table\", {\n      className: \"table\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \"ID\"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \"Nome da turma\"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, \"A\\xE7\\xF5es\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, this.state.studentsOfTheClassTeam.map(student => React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      scope: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, student._id), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, student.name), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn btn-danger\",\n      onClick: this.deleteStudent,\n      value: student._id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, \"Remover da turma\")))))));\n  }\n\n}\n\nexport default ClassTeamDetail;","map":{"version":3,"sources":["/home/alexandre/personalProjects/eeld-react/src/components/ClassTeamDetail.js"],"names":["React","api","ClassTeamDetail","Component","constructor","props","findWithAttr","array","attr","value","i","length","verifyStudent","getStudents","addedStudents","allStudents","availableStudents","get","then","resp","data","state","classTeam_id","console","log","classTeams","map","ct","push","getStudentsOfClassTeam","id_turma","idStudents","students","studentsDetails","idStu","student","setState","studentsOfTheClassTeam","enrollNewStudent","event","post","student_id","target","deleteStudent","match","params","id","turmaDetail","totalStudents","lastStudent","componentDidMount","render","head","_id","name"],"mappings":"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","sourcesContent":["import React from 'react';\nimport api from '../services/api'\n\n\n\nclass ClassTeamDetail extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      id_turma:this.props.match.params.id,\n      turmaDetail:{},\n      allStudents:[],\n      studentsOfTheClassTeam:[],\n      totalStudents:'',\n      lastStudent:'',\n    }\n  }\n  findWithAttr = (array, attr, value) => {\n    for(var i = 0; i < array.length; i += 1) {\n        if(array[i][attr] === value) {\n            return i;\n        }\n    }\n    return -1;\n}\nverifyStudent = () => {\n\n}\n  \n  getStudents = () =>{\n    let addedStudents = [];\n    let allStudents = [];\n    let availableStudents = [];\n    api.get('/allStudents').then((resp)=>{\n      allStudents = resp.data;\n      //console.log(resp.data)\n      //this.setState({allStudents:resp.data})\n    });\n    api.get('/classTeam/'+this.state.classTeam_id).then((resp)=>{\n      console.log(resp)\n      const classTeams = resp.data;\n      classTeams.map((ct)=>{\n        console.log(ct)\n        addedStudents.push()\n      })\n      //this.setState({allStudents:resp.data})\n    });\n  }\n\n  \n    getStudentsOfClassTeam = () =>{\n        api.get('/classTeams/'+this.state.id_turma).then((resp)=>{\n          const idStudents = resp.data.students;\n          \n          let studentsDetails = []; \n          idStudents.map((idStu)=>{\n            api.get('/students/'+idStu).then((student)=>{\n              //this.setState({studentsOfTheClassTeam:studentsDetails})\n              studentsDetails.push(student.data);\n              this.setState({studentsOfTheClassTeam:studentsDetails})\n            })\n          });\n        })\n      }\n    \n    enrollNewStudent = (event) => {\n     api.post('/classTeams/addStudent', {\n          student_id:event.target.value, classTeam_id:this.state.id_turma \n        }).then((resp)=>{\n          this.getStudentsOfClassTeam();\n        })\n      }\n\n    componentDidMount(){\n      this.getStudents();\n      this.getStudentsOfClassTeam();\n    \n    }\n\n    deleteStudent = (event) =>{\n      api.post('/classTeams/removeStudent', {student_id:event.target.value,classTeam_id:this.state.id_turma }).then(\n        (resp)=>{\n        \n        this.getStudentsOfClassTeam();\n      })\n     \n  }\n    render (){\n      //renderiza o cadastro apenas se o numero de alunos for menor ou igual a 12\n      \n      let head;  \n      if(this.state.studentsOfTheClassTeam.length<12){\n        head = <div>\n        <label>Adicionar alunos na turma</label> \n       <select onChange={this.enrollNewStudent}>\n         <option></option>\n       {\n         this.state.allStudents.map((student)=>(\n         <option value={student._id}>{student.name}</option>\n         ))\n       }\n       </select>\n       </div>;\n      }\n      else{\n        head = <p className=\"bg-danger text-light\">Turma lotada - Impossivel add mais alunos nessa turma</p>\n      }\n      \n        return <div>\n              <h2>Alunos da turma</h2>\n                    <br/>\n                    <div>\n                          <p className=\"bg-success\">Total de alunos: {this.state.studentsOfTheClassTeam.length}</p>\n                    </div>\n                    {head}\n                  <table className=\"table\">\n                  <thead>\n                    <tr>\n                      <th scope=\"col\">ID</th>\n                      <th scope=\"col\">Nome da turma</th>\n                      <th scope=\"col\">Ações</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {\n                      this.state.studentsOfTheClassTeam.map((student)=>(\n                      <tr>\n                        <th scope=\"row\">{student._id}</th>\n                        <td>{student.name}</td>\n                        <td>\n                            <button className=\"btn btn-danger\" onClick={this.deleteStudent} value={student._id}>Remover da turma</button>\n                        </td>\n                    </tr>\n                      ))\n                    }\n                  </tbody>\n                </table> \n                </div>  \n      \n    }\n}\n\nexport default ClassTeamDetail"]},"metadata":{},"sourceType":"module"}