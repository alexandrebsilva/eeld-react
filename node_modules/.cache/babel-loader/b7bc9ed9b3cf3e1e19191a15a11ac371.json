{"ast":null,"code":"var _jsxFileName = \"/home/alexandre/personalProjects/eeld-react/src/components/detail/ClassTeam.js\";\nimport React from 'react';\nimport api from '../../services/api';\nimport StudentItemClass from '../ListItems/StudentItemClass';\n\nclass ClassTeam extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      id_turma: this.props.match.params.id,\n      turmaDetail: {},\n      allStudents: [],\n      studentsOfTheClassTeam: [],\n      totalStudents: ''\n    };\n\n    this.getStudents = () => {\n      api.get('/allStudents').then(resp => {\n        this.setState({\n          allStudents: resp.data\n        });\n      });\n    };\n\n    this.getStudentsOfClassTeam = () => {\n      api.get('/classTeams/' + this.state.id_turma).then(resp => {\n        const idStudents = resp.data.students;\n        let studentsDetails = [];\n        idStudents.map(idStu => {\n          api.get('/students/' + idStu).then(student => {\n            studentsDetails.push(student.data);\n            this.setState({\n              studentsOfTheClassTeam: studentsDetails\n            });\n          });\n        });\n      });\n    };\n\n    this.enrollNewStudent = event => {\n      console.log(event.target.value);\n    };\n  }\n\n  componentDidMount() {\n    this.getStudents();\n    this.getStudentsOfClassTeam();\n  }\n\n  render() {\n    //renderiza o cadastro apenas se o numero de alunos for menor ou igual a 12\n    if (this.state.totalStudents <= 12) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, \"Alunos da turma \", this.state.totalStudents), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \" \", React.createElement(\"p\", {\n        className: \"bg-success\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \"Total de alunos: \", this.state.studentsOfTheClassTeam.length), \"Adicionar alunos na turma\"), React.createElement(\"select\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, this.state.allStudents.map(student => React.createElement(\"option\", {\n        onChange: this.enrollNewStudent,\n        value: student._id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, student.name)))), React.createElement(\"table\", {\n        className: \"table\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        scope: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"ID\"), React.createElement(\"th\", {\n        scope: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, \"Nome Turma\"), React.createElement(\"th\", {\n        scope: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"A\\xE7\\xF5es\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, this.state.studentsOfTheClassTeam.map(student => React.createElement(StudentItemClass, {\n        key: student._id,\n        classId: this.state.id_turma,\n        name: student.name,\n        id: student._id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      })))));\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \"Alunos da turma \", this.state.totalStudents), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }), React.createElement(\"table\", {\n        className: \"table\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        scope: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"ID\"), React.createElement(\"th\", {\n        scope: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, \"Nome Turma\"), React.createElement(\"th\", {\n        scope: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, \"A\\xE7\\xF5es\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, this.state.studentsOfTheClassTeam.map(student => React.createElement(StudentItemClass, {\n        key: student._id,\n        classId: this.state.id_turma,\n        name: student.name,\n        id: student._id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      })))));\n    }\n  }\n\n}\n\nexport default ClassTeam;","map":{"version":3,"sources":["/home/alexandre/personalProjects/eeld-react/src/components/detail/ClassTeam.js"],"names":["React","api","StudentItemClass","ClassTeam","Component","state","id_turma","props","match","params","id","turmaDetail","allStudents","studentsOfTheClassTeam","totalStudents","getStudents","get","then","resp","setState","data","getStudentsOfClassTeam","idStudents","students","studentsDetails","map","idStu","student","push","enrollNewStudent","event","console","log","target","value","componentDidMount","render","length","_id","name"],"mappings":"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","sourcesContent":["import React from 'react';\nimport api from '../../services/api'\nimport StudentItemClass from '../ListItems/StudentItemClass';\n\n\n\nclass ClassTeam extends React.Component {\n  state = {\n    id_turma:this.props.match.params.id,\n    turmaDetail:{},\n    allStudents:[],\n    studentsOfTheClassTeam:[],\n    totalStudents:'',\n  }\n  getStudents = () =>{\n    api.get('/allStudents').then((resp)=>{\n      this.setState({allStudents:resp.data})\n    })\n  }\n    getStudentsOfClassTeam = () =>{\n        api.get('/classTeams/'+this.state.id_turma).then((resp)=>{\n          const idStudents = resp.data.students;\n          \n          let studentsDetails = []; \n          idStudents.map((idStu)=>{\n            api.get('/students/'+idStu).then((student)=>{\n              studentsDetails.push(student.data);\n              this.setState({studentsOfTheClassTeam:studentsDetails})\n            })\n          });\n        })\n      }\n    enrollNewStudent = (event) => {\n        console.log(event.target.value)\n    }\n    componentDidMount(){\n      this.getStudents();\n      this.getStudentsOfClassTeam();\n    }\n\n    render (){\n      //renderiza o cadastro apenas se o numero de alunos for menor ou igual a 12\n      if(this.state.totalStudents<=12){\n        return <div>\n    <h2>Alunos da turma {this.state.totalStudents}</h2>\n          <br/>\n          <div>\n              <p> <p className=\"bg-success\">Total de alunos: {\n                this.state.studentsOfTheClassTeam.length\n              }</p>\n              Adicionar alunos na turma \n              </p>\n            <select>\n            {\n              this.state.allStudents.map((student)=>(\n              <option onChange={this.enrollNewStudent} value={student._id}>{student.name}</option>\n              ))\n            }\n            </select>\n          </div>\n\n        <table className=\"table\">\n        <thead>\n          <tr>\n            <th scope=\"col\">ID</th>\n            <th scope=\"col\">Nome Turma</th>\n            <th scope=\"col\">Ações</th>\n          </tr>\n        </thead>\n        <tbody>\n          {\n            this.state.studentsOfTheClassTeam.map((student)=>(\n              <StudentItemClass key={student._id} classId={this.state.id_turma} name={student.name} id={student._id}/>\n            ))\n          }\n        </tbody>\n      </table> \n      </div>  \n      }else{\n        return <div>\n    <h2>Alunos da turma {this.state.totalStudents}</h2>\n          <br/>\n        <table className=\"table\">\n        <thead>\n          <tr>\n            <th scope=\"col\">ID</th>\n            <th scope=\"col\">Nome Turma</th>\n            <th scope=\"col\">Ações</th>\n          </tr>\n        </thead>\n        <tbody>\n          {\n            this.state.studentsOfTheClassTeam.map((student)=>(\n              <StudentItemClass key={student._id} classId={this.state.id_turma} name={student.name} id={student._id}/>\n            ))\n          }\n        </tbody>\n      </table> \n      </div>\n      }\n        \n    }\n}\n\nexport default ClassTeam"]},"metadata":{},"sourceType":"module"}