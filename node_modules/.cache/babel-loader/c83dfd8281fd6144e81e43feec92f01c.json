{"ast":null,"code":"var _jsxFileName = \"/home/alexandre/personalProjects/eeld-react/src/components/ClassTeamDetail.js\";\nimport React from 'react';\nimport api from '../services/api';\n\nclass ClassTeamDetail extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.findWithAttr = (array, attr, value) => {\n      for (var i = 0; i < array.length; i += 1) {\n        if (array[i][attr] === value) {\n          return i;\n        }\n      }\n\n      return -1;\n    };\n\n    this.getStudents = () => {\n      api.get('/allStudents').then(resp => {\n        this.setState({\n          allStudents: resp.data\n        });\n        console.log(this.state.studentsOfTheClassTeam);\n      });\n    };\n\n    this.getStudentsOfClassTeam = () => {\n      api.get('/classTeams/' + this.state.id_turma).then(resp => {\n        const idStudents = resp.data.students;\n        let studentsDetails = [];\n        idStudents.map(idStu => {\n          api.get('/students/' + idStu).then(student => {\n            //this.setState({studentsOfTheClassTeam:studentsDetails})\n            studentsDetails.push(student.data);\n            this.setState({\n              studentsOfTheClassTeam: studentsDetails\n            });\n          });\n        });\n      });\n    };\n\n    this.enrollNewStudent = event => {\n      api.post('/classTeams/addStudent', {\n        student_id: event.target.value,\n        classTeam_id: this.state.id_turma\n      }).then(resp => {\n        this.getStudentsOfClassTeam();\n      });\n    };\n\n    this.deleteStudent = event => {\n      api.post('/classTeams/removeStudent', {\n        student_id: event.target.value,\n        classTeam_id: this.state.id_turma\n      }).then(resp => {\n        this.getStudentsOfClassTeam();\n      });\n    };\n\n    this.state = {\n      id_turma: this.props.match.params.id,\n      turmaDetail: {},\n      allStudents: [],\n      studentsOfTheClassTeam: [],\n      totalStudents: '',\n      lastStudent: ''\n    };\n  }\n\n  componentDidMount() {\n    this.getStudents();\n    this.getStudentsOfClassTeam();\n  }\n\n  render() {\n    //renderiza o cadastro apenas se o numero de alunos for menor ou igual a 12\n    let head;\n\n    if (this.state.studentsOfTheClassTeam.length < 12) {\n      head = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \"Adicionar alunos na turma\"), React.createElement(\"select\", {\n        onChange: this.enrollNewStudent,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }), this.state.allStudents.map(student => React.createElement(\"option\", {\n        value: student._id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, student.name))));\n    } else {\n      head = React.createElement(\"p\", {\n        className: \"bg-danger text-light\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, \"Turma lotada - Impossivel add mais alunos nessa turma\");\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"Alunos da turma\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"bg-success\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"Total de alunos: \", this.state.studentsOfTheClassTeam.length)), head, React.createElement(\"table\", {\n      className: \"table\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"ID\"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"Nome da turma\"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"A\\xE7\\xF5es\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, this.state.studentsOfTheClassTeam.map(student => React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      scope: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, student._id), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, student.name), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn btn-danger\",\n      onClick: this.deleteStudent,\n      value: student._id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"Remover da turma\")))))));\n  }\n\n}\n\nexport default ClassTeamDetail;","map":{"version":3,"sources":["/home/alexandre/personalProjects/eeld-react/src/components/ClassTeamDetail.js"],"names":["React","api","ClassTeamDetail","Component","constructor","props","findWithAttr","array","attr","value","i","length","getStudents","get","then","resp","setState","allStudents","data","console","log","state","studentsOfTheClassTeam","getStudentsOfClassTeam","id_turma","idStudents","students","studentsDetails","map","idStu","student","push","enrollNewStudent","event","post","student_id","target","classTeam_id","deleteStudent","match","params","id","turmaDetail","totalStudents","lastStudent","componentDidMount","render","head","_id","name"],"mappings":"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","sourcesContent":["import React from 'react';\nimport api from '../services/api'\n\n\n\nclass ClassTeamDetail extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      id_turma:this.props.match.params.id,\n      turmaDetail:{},\n      allStudents:[],\n      studentsOfTheClassTeam:[],\n      totalStudents:'',\n      lastStudent:'',\n    }\n  }\n  findWithAttr = (array, attr, value) => {\n    for(var i = 0; i < array.length; i += 1) {\n        if(array[i][attr] === value) {\n            return i;\n        }\n    }\n    return -1;\n}\n  \n  getStudents = () =>{\n    api.get('/allStudents').then((resp)=>{\n      this.setState({allStudents:resp.data})\n      console.log(this.state.studentsOfTheClassTeam)\n    })\n  }\n    getStudentsOfClassTeam = () =>{\n        api.get('/classTeams/'+this.state.id_turma).then((resp)=>{\n          const idStudents = resp.data.students;\n          \n          let studentsDetails = []; \n          idStudents.map((idStu)=>{\n            api.get('/students/'+idStu).then((student)=>{\n              //this.setState({studentsOfTheClassTeam:studentsDetails})\n              studentsDetails.push(student.data);\n              this.setState({studentsOfTheClassTeam:studentsDetails})\n            })\n          });\n        })\n      }\n\n    enrollNewStudent = (event) => {\n     api.post('/classTeams/addStudent', {\n          student_id:event.target.value, classTeam_id:this.state.id_turma \n        }).then((resp)=>{\n          this.getStudentsOfClassTeam();\n        })\n      }\n\n    componentDidMount(){\n      this.getStudents();\n      this.getStudentsOfClassTeam();\n    }\n\n    deleteStudent = (event) =>{\n      api.post('/classTeams/removeStudent', {student_id:event.target.value,classTeam_id:this.state.id_turma }).then(\n        (resp)=>{\n        \n        this.getStudentsOfClassTeam();\n      })\n     \n  }\n    render (){\n      //renderiza o cadastro apenas se o numero de alunos for menor ou igual a 12\n      \n      let head;  \n      if(this.state.studentsOfTheClassTeam.length<12){\n        head = <div>\n        <label>Adicionar alunos na turma</label> \n       <select onChange={this.enrollNewStudent}>\n         <option></option>\n       {\n         this.state.allStudents.map((student)=>(\n         <option value={student._id}>{student.name}</option>\n         ))\n       }\n       </select>\n       </div>;\n      }\n      else{\n        head = <p className=\"bg-danger text-light\">Turma lotada - Impossivel add mais alunos nessa turma</p>\n      }\n      \n        return <div>\n              <h2>Alunos da turma</h2>\n                    <br/>\n                    <div>\n                          <p className=\"bg-success\">Total de alunos: {this.state.studentsOfTheClassTeam.length}</p>\n                    </div>\n                    {head}\n                  <table className=\"table\">\n                  <thead>\n                    <tr>\n                      <th scope=\"col\">ID</th>\n                      <th scope=\"col\">Nome da turma</th>\n                      <th scope=\"col\">Ações</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {\n                      this.state.studentsOfTheClassTeam.map((student)=>(\n                      <tr>\n                        <th scope=\"row\">{student._id}</th>\n                        <td>{student.name}</td>\n                        <td>\n                            <button className=\"btn btn-danger\" onClick={this.deleteStudent} value={student._id}>Remover da turma</button>\n                        </td>\n                    </tr>\n                      ))\n                    }\n                  </tbody>\n                </table> \n                </div>  \n      \n    }\n}\n\nexport default ClassTeamDetail"]},"metadata":{},"sourceType":"module"}